- content_for :title, t('.title')

.start-page
  header.hero data-image-url=image_path('start/hero.jpg')
    .row
      .large-8.columns.large-centered.text-center
        h2 = t('.hero_call_html')
  .white
    section.steps
      .row
        - steps = OpenStruct.new first_step_icon:  'et-paper-plane', first_step_title:  t('.steps.first.title'),  first_step_description:  t('.steps.first.description'),
                                 second_step_icon: 'et-clock',       second_step_title: t('.steps.second.title'), second_step_description: t('.steps.second.description'),
                                 third_step_icon:  'fa-eye-open',    third_step_title:  t('.steps.third.title'),  third_step_description:  t('.steps.third.description')

        - for step in [:first, :second, :third]
          .large-4.columns
            .large-11.columns.large-centered.rounded-top
              .step
                i[class="icon-#{steps.send("#{step}_step_icon")}"]
                h5 = steps.send("#{step}_step_title")
                p = steps.send("#{step}_step_description")

    .row
      .large-10.columns.large-centered
        hr

        h2.title-for-hero-page = t('.title')

    .row
      .large-10.columns.large-centered
        = simple_form_for resource, url: project_matches_path do |f|
          .row
            #match-form.large-8.large-offset-2.columns
              p I pledge to match
              .input-money-wrapper
                span.prefix $
                = f.number_field :value, required: true, label: false, autocomplete: 'off', min: 1, class: 'with-prefix with-postfix input-money'
              p for each $1 raised between
              - date = Time.now.strftime('%m/%d/%y')
              = f.input_field :starts_at,   as: :string, required: true, class: 'input-date-match-form', value: date, placeholder: date, maxlength: 8
              p and
              - date = parent.expires_at.strftime('%m/%d/%y')
              = f.input_field :finishes_at, as: :string, required: true, class: 'input-date-match-form', value: date, placeholder: date, maxlength: 8
              p up to
              .input-money-wrapper.input-money-wrapper-match-maximum-value
                span.prefix $
                = f.number_field :maximum_value, required: true, label: false, autocomplete: 'off', min: 1_000, class: 'with-prefix with-postfix input-money input-money-match-maximum-value'
          .row
            = f.submit t('.form.inputs.submit'), class: 'submit-match-form button large-8 large-offset-2 columns'
